{
  "name": "Combobox.Root",
  "props": {
    "disabled": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not the combobox component is disabled.",
      "description_zh": "组合框组件是否被禁用。"
    },
    "multiple": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not the combobox menu allows multiple selections.",
      "description_zh": "组合框菜单是否允许多项选择。"
    },
    "preventScroll": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether or not to prevent scrolling the body when the menu is open.",
      "description_zh": "是否在菜单打开时防止滚动正文。"
    },
    "closeOnEscape": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether to close the combobox menu when the escape key is pressed.",
      "description_zh": "是否在按下转义键时关闭组合框菜单。"
    },
    "closeOnOutsideClick": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether to close the combobox menu when a click occurs outside of it.",
      "description_zh": "是否在组合框菜单外部发生单击时关闭该组合框菜单。"
    },
    "loop": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not to loop through the menu items when navigating with the keyboard.",
      "description_zh": "使用键盘导航时是否循环浏览菜单项。"
    },
    "open": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "The open state of the combobox menu.",
      "description_zh": "组合框菜单的打开状态。"
    },
    "selected": {
      "value": "",
      "default": "_",
      "type": "object",
      "description": "The value of the currently selected item.",
      "description_zh": "当前选定项的值。"
    },
    "portal": {
      "value": "",
      "default": "_",
      "type": "union",
      "description": "Where to render the combobox menu when it is open. Defaults to the body. Can be disabled by passing null",
      "description_zh": "打开组合框菜单时呈现该菜单的位置。默认为正文。可以通过传递 null 来禁用"
    },
    "highlightOnHover": {
      "value": "",
      "default": "true",
      "type": "boolean",
      "description": "Whether or not to highlight the currently hovered item.",
      "description_zh": "是否突出显示当前悬停的项目。"
    },
    "name": {
      "value": "",
      "default": "_",
      "type": "string",
      "description": "The name to apply to the hidden input element for form submission.",
      "description_zh": "要应用于表单提交的隐藏输入元素的名称。"
    },
    "required": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "Whether or not the combobox menu is required.",
      "description_zh": "是否需要组合框菜单。"
    },
    "scrollAlignment": {
      "value": "",
      "default": "nearest",
      "type": "enum",
      "description": "The alignment of the highlighted item when scrolling.",
      "description_zh": "滚动时突出显示的项目的对齐方式。"
    },
    "inputValue": {
      "value": "",
      "default": "_",
      "type": "string",
      "description": "The value of the combobox input element.",
      "description_zh": "combobox 输入元素的值。"
    },
    "items": {
      "value": "",
      "default": "_",
      "type": "Selected[]",
      "description": "An array of items to add type-safety to the onSelectedChange callback.",
      "description_zh": "用于向 onSelectedChange 回调添加类型安全性的项数组。"
    },
    "touchedInput": {
      "value": "",
      "default": "false",
      "type": "boolean",
      "description": "The touched state of the input. When the menu closes, the state is reset to false. Whenever a key is pressed into the input, the state is set to true. You can bind to this to handle filtering the items only when the input has been touched.",
      "description_zh": "输入的触摸状态。当菜单关闭时，状态将重置为 false。每当将键按入输入时，状态都会设置为 true。您可以绑定到此项，以仅在触及输入时处理筛选项目。"
    }
  },
  "description": "The root combobox component which manages & scopes the state of the combobox.",
  "link": "https://www.bits-ui.com/docs/components/combobox",
  "link_zh": "https://www.bits-ui.com/docs/components/combobox",
  "typeDetail": {},
  "events": [
    {
      "name": "onOpenChange",
      "description": "A callback that is fired when the combobox menu's open state changes.",
      "description_zh": "A callback that is fired when the combobox menu's open state changes."
    },
    {
      "name": "onSelectedChange",
      "description": "A callback that is fired when the combobox menu's value changes.",
      "description_zh": "A callback that is fired when the combobox menu's value changes."
    },
    {
      "name": "onOutsideClick",
      "description": "A callback function called when a click occurs outside of the element. If event.preventDefault() is called, the default behavior of closing the element will be prevented.",
      "description_zh": "A callback function called when a click occurs outside of the element. If event.preventDefault() is called, the default behavior of closing the element will be prevented."
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "ids",
      "description": "The ids of the elements within the component, useful when you don't necessarily want to provide a custom ID, but still want access to the ID being assigned (if any). ",
      "description_zh": "组件中元素的 ID，当您不一定希望提供自定义 ID，但仍希望访问正在分配的 ID（如果有）时，非常有用。"
    }
  ],
  "suggestions": [
    "Combobox.Input",
    "Combobox.Label",
    "Combobox.Content",
    "Combobox.Arrow",
    "Combobox.HiddenInput"
  ],
  "filename": "ComboboxRoot"
}
